<!-- ########################################################################################## -->
<!-- Create Tabs -->
<!-- ########################################################################################## -->
<%= render 'shared/tabs' %>
<div class="mb-4"></div>

<!-- ########################################################################################## -->
<!-- Add Expense -->
<!-- ########################################################################################## -->
<div id="FirstTab" class="tabcontent">
  <div class="container">
    <%= simple_form_for [ @expense ] do |f| %>

    <!-- Title New Expense -->
    <% payment_title_arr = ["Sunday Lunch", "British Gas", "Beers for the Boys", "Cinema and Crisps", "Pizza", "Council Tax", "Cheeky Nandos", "House Bills"] %>
    <label class="input-form-label" for="first_name">What did you pay for? (required)</label>
    <%= f.input :title, :class => 'input-form-item', input_html: { id: "title"}, :label => false, placeholder: "#{payment_title_arr.sample}" %>

    <!-- New Expense Amount -->
    <label class="input-form-label" for="first_name">How much did you pay? (required)</label>
    <div class="d-flex align-center">
      <%= f.input :amount_currency, :type => String, input_html: { id: "payment-method"}, :class => 'input-form-item', :label => false, collection: ["GBP", "EUR", "USD", "CAD", "CHF", "DKK", "SGD", "ZAR", "MXN"] %>
      <%= f.input :amount_pennies, :type => String, input_html: { id: "amount"}, :class => 'input-form-item', :label => false, placeholder: "0.00" %>
    </div>

    <!-- Split Between -->
    <label class="input-form-label" for="first_name">Who's Involved? (required)</label>
    <div class="side-scroller-description side-scroller-base text-center">
      <p>Go on then, who bought something?</p>
    </div>
    <% if @group.users.length < 4 %>
      <div class="row">
        <div class="col">
          <div class="user-selector-area text-center">
            <%= image_tag @user.image, class: "avatar-large avatar-new", data: { id: @user.id } %>
            <p class="under-avatar-text"><%= @user.first_name %> (Me)</p>
          </div>
        </div>
        <% @group.users.each do |member| %>
          <% if member == @user %>
            <% next %>
          <% end %>
          <div class="col">
            <div class="user-selector-area text-center">
              <%= image_tag member.image, class: "avatar-large avatar-new", data: { id: member.id } %>
              <p class="under-avatar-text"><%= member.first_name %></p>
            </div>
          </div>
        <% end %>
      </div>
    <% else %>
      <div class="testimonial-group side-scroller-base">
        <div class="row">
          <div class="col-3">
            <div class="user-selector-area text-center">
              <%= image_tag @user.image, class: "avatar-large avatar-new", data: { id: @user.id } %>
              <p class="under-avatar-text"><%= @user.first_name %> (Me)</p>
            </div>
          </div>
          <% @group.users.each do |member| %>
            <% if member == @user %>
              <% next %>
            <% end %>
            <div class="col-3">
              <div class="user-selector-area text-center">
                <%= image_tag member.image, class: "avatar-large avatar-new", data: { id: member.id } %>
                <p class="under-avatar-text"><%= member.first_name %></p>
              </div>
            </div>
          <% end %>
        </div>
      </div>
    <% end %>

    <!-- Payment Type (Optional) -->
    <label class="input-form-label" for="payment_method">How did you pay?</label>
    <%= f.input :payment_method, :type => String, input_html: { id: "payment-method"}, :class => 'input-form-item', :label => false, collection: ["Facebook Payments", "Bank Transfer", "Card", "Cash", "Paypal"] %>

    <!-- Location of Expense (Optional) -->
    <label class="input-form-label" for="first_name">Where was it?</label>
    <% locations_arr = ["Wagamama", "The Sloaney Pony", "Picturehouse", "Le Rac Shak", "PingPong Dim Sum", "Nandos", "Theater"] %>
    <%= f.input :location, :class => 'input-form-item', :label => false, placeholder: "#{locations_arr.sample}" %>

    <!-- Description of Expense (Optional) -->
    <label class="input-form-label" for="first_name">Description?</label>
    <% descriptions_arr = ["Jamie's Birthday", "Open Mic Night", "Holiday on Mallorca", "Interrailing with Charlotte", "Weekend trip to Wonderland", "Deliveroo"] %>
    <%= f.input :description, :class => 'input-form-item mb-4', :label => false, :type => "text", placeholder: "#{descriptions_arr.sample} " %>

    <!-- Hidden Inputs -->
    <%= f.input :involved_group, as: :hidden, input_html: { value: "", id: "involved_group_field" } %>
    <!-- <%= f.hidden_field :user_id, value: @user.id %> -->
    <!-- <%= f.hidden_field :to_pay_id, value: @user.id %> -->
    <!-- <%= f.hidden_field :group_id, value: @group.id %> -->

    <!-- Input Button (to be removed) -->
  </div>
    <div class="fixed-btn-section submit-button">
      <%= button_tag type: 'submit', class: "send-btn-primary d-flex align-center justify-center", id: "add-button" do %>
        <p class="no-margin"><i class="fa fa-plus fa-fw fa-lg mr-2 color-white" aria-hidden="true"></i>Add Expense</p>
      <% end %>
      <!-- Simple Form End -->
      <% end %>
    </div>
</div>

<!-- ########################################################################################## -->
<!-- Settle Expense -->
<!-- ########################################################################################## -->
<div id="Settle" class="tabcontent" style="display: none;">
  <% if @group.users.length == @owed_array.length %>
    <div class="container">
      <h5>Look's like you don't owe anyone at the moment - good work!</h5>
    </div>
  <% else %>
    <div class="container">
      <!-- Pay Back Person Selector -->
      <label class="input-form-label" for="first_name">Who do you want to settle with?</label>
      <% if @group.users.length <= 5 %>
        <div class="row">
          <% @group.users.each do |member| %>
            <% next if member == @user || @user.outstanding_with_person_in_group(member, @group) > 0 %>
            <div class="col">
              <div class="user-selector-area text-center">
                <%= image_tag member.image, class: "avatar-large avatar-settle", data: { id: member.id } %>
                <p class="under-avatar-text"><%= member.first_name %></p>
              </div>
            </div>
          <% end %>
        </div>
      <% else %>
        <div class="testimonial-group side-scroller-base">
          <div class="row">
            <% @group.users.each do |member| %>
              <% next if member == @user || @user.outstanding_with_person_in_group(member, @group) > 0 %>
              <div class="col-3">
                <div class="user-selector-area text-center">
                  <%= image_tag member.image, class: "avatar-large avatar-settle", data: { id: member.id } %>
                  <p class="under-avatar-text"><%= member.first_name %></p>
                </div>
              </div>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>
    <div class="container">
      <%= simple_form_for [ @expense ] do |f| %>
        <!-- Choose Amount to Settle -->
        <label class="input-form-label" for="payment_method">How did you pay? (required)</label>
        <%= f.input :payment_method, :type => String, input_html: { id: "payment-method"}, :class => 'input-form-item', :label => false, collection: ["Facebook Payments", "Bank Transfer", "Card", "Cash", "Paypal"] %>
        <label class="input-form-label" for="amount_cents">How much? (required)</label>
        <div class="d-flex align-center">
          <%= f.input :amount_currency, :type => String, input_html: { id: "payment-method"}, :class => 'input-form-item', :label => false, collection: ["GBP", "EUR", "USD", "CAD", "CHF", "DKK", "SGD", "ZAR", "MXN"] %>
          <%= f.input :amount_pennies, :type => String, input_html: { id: "settle-amount"}, :class => 'input-form-item', :label => false, placeholder: "0.00" %>
        </div>

        <%= f.hidden_field :title, value: "#{@user.first_name} settled up" %>
        <%= f.hidden_field :description, value: "Settled" %>
        <%= f.hidden_field :user_id, value: @user.id %>
        <%= f.input :settle_group, as: :hidden, input_html: { value: "", id: "settle_group_field" } %>
        <!-- <%= f.input :to_pay_id, as: :hidden, input_html: { value: "", id: "to_pay_field" } %> -->
        <%= f.hidden_field :location, value: "" %>
        <%= f.hidden_field :group_id, value: @group.id %>
    </div>
      <div class="fixed-btn-section submit-button">
        <%= button_tag type: 'submit', class: "send-btn-primary d-flex align-center justify-center", id: "settle-button" do %>
          <p class="no-margin"><i class="fa fa-check fa-fw fa-lg mr-2 color-white" aria-hidden="true"></i>Settle Up</p>
        <% end %>
      </div>
      <!-- Simple Form End -->
      <% end %>
  <% end %>

</div>

<!-- ########################################################################################## -->
<!-- Javascript -->
<!-- ########################################################################################## -->
<% content_for(:after_js) do %>
  <%= javascript_include_tag 'https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/7.1.1/sweetalert2.all.min.js' %>

  <!-- Including the Facebook Extension SDK -->
  <script>
    (function(d, s, id) {
      var js, fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) {return;}
      js = d.createElement(s); js.id = id;
      js.src = "//connect.facebook.com/en_GB/messenger.Extensions.js";
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'Messenger'));
  </script>

  <script>
  // ###########################################################################################################
  // Page Wide Variables:
  // ###########################################################################################################
    let avatars = document.querySelectorAll(".avatar-new");
    let settleAvatars = document.querySelectorAll(".avatar-settle");
    let description = document.querySelector(".side-scroller-description");
    let message = {
                  "attachment":{
                    "type":"template",
                    "payload":{
                      "template_type":"generic",
                      "elements": [{
                        "title":"<%= @user.first_name %> just added an expense to your Kitty!",
                        "subtitle": `They are owed for ${title.value}. It was worth £${amount.value}.`,
                        "buttons":[{
                          "type":"web_url",
                          "url":"<%= ENV['NGROK'] %>",
                          "title":"View the Expense",
                          "webview_height_ratio": "full",
                          "webview_share_button": "hide",
                          "messenger_extensions": true
                        }]
                      }]
                    }
                  }
                };

  // ###########################################################################################################
  // Output Code
  // ###########################################################################################################

  // Update Array of Members Involved and Avatar Highlighting for New Expense
    avatars.forEach((avatar) => {
      avatar.addEventListener("click", () => {
        settleAvatars.forEach((settleAvatar) => {
            settleAvatar.classList = "avatar-large avatar-settle"
        })
        avatar.classList.toggle("avatar-highlighted");
        let membersArray = [];
        alterMembersArray(membersArray);
        document.getElementById("involved_group_field").value = `${membersArray}`;
        chooseAndAppendDescription(membersArray);
      })
    })

  // Update Array of Members Involved and Avatar Highlighting for Settle
    settleAvatars.forEach((avatar) => {
      avatar.addEventListener("click", () => {
        avatars.forEach((newAvatar) => {
          newAvatar.classList = "avatar-large avatar-new"
        })
        settleAvatars.forEach((settleAvatar) => {
          if (settleAvatar === avatar) {

          }
          else {
            settleAvatar.classList = "avatar-large avatar-settle"
          }
        })
        avatar.classList.toggle("avatar-highlighted");
        let membersArray = [];
        alterSettleArray(membersArray);
        document.getElementById("settle_group_field").value = `${membersArray}`;
        document.getElementById("to_pay_field").value = `${membersArray}`;
      })
    })

  // On click of send button, success and failure
    document.querySelector("#add-button").addEventListener("click", () => {
      if (document.getElementById("involved_group_field").value === "" || document.getElementById("involved_group_field").value === ["<%= @user.id %>"]) {
        descriptionForFailedPeopleSelection();
      }
      else {
        updateMessageSubtitleWithTitleAndAmount()
        // Begin Facebook's Send to Group Flow
        MessengerExtensions.beginShareFlow(function(share_response) {

        },
        function(errorCode, errorMessage) {
        // An error occurred in the process of sending message, do nothing
        },
        message,
        "current_thread");
        // End Facebook's Send to Group Flow
        // swal({
        //   position: 'top-right',
        //   type: 'success',
        //   title: '<h3> Expense created! </h3>',
        //   showConfirmButton: true,
        //   confirmButtonText: '<i class="fa fa-thumbs-up"></i>',
        //   confirmButtonColor: '#00B8D8',
        // })
      }
    });

    // On click of send button, success and failure
      document.querySelector("#settle-button").addEventListener("click", () => {
        if (document.getElementById("settle_group_field").value === "" || document.getElementById("settle_group_field").value === ["<%= @user.id %>"]) {
          descriptionForFailedPeopleSelection();
        }
        else {
          let amount = document.getElementById('settle-amount')
          let message = {
                      "attachment":{
                        "type":"template",
                        "payload":{
                          "template_type":"generic",
                          "elements": [{
                            "title":"<%= @user.first_name %> just settled an expense in your Kitty!",
                            "subtitle": `They paid back £${amount.value}`,
                            "buttons":[{
                              "type":"web_url",
                              "url":"<%= ENV['NGROK'] %>",
                              "title":"View group",
                              "webview_height_ratio": "full",
                              "messenger_extensions": true
                            }]
                          }]
                        }
                      }
                    };
          // Begin Facebook's Send to Group Flow
          MessengerExtensions.beginShareFlow(function(share_response) {

          },
          function(errorCode, errorMessage) {
          // An error occurred in the process of sending message, do nothing
          },
          message,
          "current_thread");
          // End Facebook's Send to Group Flow
          // swal({
          //   position: 'top-right',
          //   type: 'success',
          //   title: '<h3> Expense created! </h3>',
          //   showConfirmButton: true,
          //   confirmButtonText: '<i class="fa fa-thumbs-up"></i>',
          //   confirmButtonColor: '#00B8D8',
          // })
        }
      });

  // ###########################################################################################################
  // Supporter Functions
  // ###########################################################################################################
    function alterMembersArray(membersArray) {
      avatars.forEach((avatar) => {
        if (avatar.classList.contains("avatar-highlighted")) {
          membersArray.push(avatar.dataset.id);
        }
      })
      return membersArray;
    }

    function alterSettleArray(membersArray) {
      settleAvatars.forEach((avatar) => {
        if (avatar.classList.contains("avatar-highlighted")) {
          membersArray.push(avatar.dataset.id);
        }
      })
      return membersArray;
    }

    function descriptionForFailedPeopleSelection() {
      document.body.append("You haven't selected anyone!");
      description.innerHTML = "";
    }

    function updateMessageSubtitleWithTitleAndAmount() {
      let amount = document.getElementById('amount')
      let title = document.getElementById('title')
      message["attachment"]["payload"]["elements"][0]["subtitle"] = `They paid £${amount.value} for ${title.value}`;
    }

    function chooseAndAppendDescription(membersArray) {
      if (membersArray.length === <%= @group.users.count %>) {
        description.innerHTML = "";
        description.insertAdjacentHTML('afterbegin','<p><strong class="color-primary">Split equally</strong> between <strong class="color-primary">all members</strong> of the group</p>');
      }
      else if (membersArray.length > 2 && document.getElementById("involved_group_field").value.includes(<%= @user.id.to_s %>)) {
        const others_amount = membersArray.length - 1
        description.innerHTML = "";
        description.insertAdjacentHTML('afterbegin',`<p><strong class="color-primary">Split equally</strong> between <strong class="color-primary">you and ${others_amount} others</strong></p>`);
      }
      else if (membersArray.length === 1 && document.getElementById("involved_group_field").value.includes(<%= @user.id.to_s %>)) {
        const others_amount = membersArray.length - 1
        description.innerHTML = "";
        description.insertAdjacentHTML('afterbegin',`<p class="no-margin">You want to make an expense just with yourself? Even a cat doubts that...</p>`);
      }
      else if (document.getElementById("involved_group_field").value.includes(<%= @user.id.to_s %>)) {
        const others_amount = membersArray.length - 1
        description.innerHTML = "";
        description.insertAdjacentHTML('afterbegin',`<p><strong class="color-primary">Split equally</strong> between <strong class="color-primary">you and ${others_amount} other</strong></p>`);
      }
      else if (membersArray.length > 1) {
        const others_amount = membersArray.length
        description.innerHTML = "";
        description.insertAdjacentHTML('afterbegin',`<p><strong class="color-primary">You are owed everything</strong> by <strong class="color-primary">${others_amount} others</strong> who split it equally</p>`);
      }
      else if (membersArray.length === 1) {
        const others_amount = membersArray.length
        description.innerHTML = "";
        description.insertAdjacentHTML('afterbegin',`<p><strong class="color-primary">You are owed everything</strong> by just <strong class="color-primary">${others_amount} person</strong></p>`);
      }
      else {
        description.innerHTML = "";
        description.insertAdjacentHTML('afterbegin',`<p>Well this isn't going to work is it</p>`);
      }
    }

  </script>
<% end %>
